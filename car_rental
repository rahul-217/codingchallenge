CREATE DATABASE casestudy;
use casestudy;

CREATE TABLE vehicle_table
	(vehicle_id int primary key,
    make varchar(255),
    model varchar(255),
    year int,
    dailyRate decimal(5, 2),
	avail_status bool,
    passCap int,
    engCap int);


INSERT INTO vehicle_table(vehicle_id, make, model, year, dailyRate, avail_status, passCap, engCap) VALUES
	(1, 'Toyota', 'Camry', 2022, 50.00, 1, 4, 1450),
	(2, 'Honda', 'Civic', 2023, 45.00, 1, 7, 1500),
	(3, 'Ford', 'Focus', 2022, 48.00, 0, 4, 1400),
	(4, 'Nissan', 'Altima', 2023, 52.00, 1, 7, 1200),
	(5, 'Chevrolet', 'Malibu', 2022, 47.00, 1, 4, 1800),
	(6, 'Hyundai', 'Sonata', 2023, 49.00, 0, 7, 1400),
	(7, 'BMW', '3 Series', 2023, 60.00, 1, 7, 2499),
	(8, 'Mercedes', 'C-Class', 2022, 58.00, 1, 8, 2599),
	(9, 'Audi', 'A4', 2022, 55.00, 0, 4, 2500),
	(10, 'Lexus', 'ES', 2023, 54.00, 1, 4, 2500);
    
CREATE TABLE customer_table(
	cust_id int primary key,
    first_name varchar(255),
    last_name varchar(255),
    email varchar(255),
    phone_no varchar(255));
    
INSERT INTO customer_table(cust_id, first_name, last_name, email, phone_no) VALUES
	(1, 'John', 'Doe', 'johndoe@example.com', '555-555-5555'),
	(2, 'Jane', 'Smith', 'janesmith@example.com', '555-123-4567'),
	(3, 'Robert', 'Johnson', 'robert@example.com', '555-789-1234'),
	(4, 'Sarah', 'Brown', 'sarah@example.com', '555-456-7890'),
	(5, 'David', 'Lee', 'david@example.com', '555-987-6543'),
	(6, 'Laura', 'Hall', 'laura@example.com', '555-234-5678'),
	(7, 'Michael', 'Davis', 'michael@example.com', '555-876-5432'),
	(8, 'Emma', 'Wilson', 'emma@example.com', '555-432-1098'),
	(9, 'William', 'Taylor', 'william@example.com', '555-321-6547'),
	(10, 'Olivia', 'Adams', 'olivia@example.com', '555-765-4321');

CREATE TABLE lease_table(
	lease_id int primary key,
    car_id int,
    cust_id int, 
    startDate date, 
    endDate date, 
    leaseType enum('Daily', 'Monthly'),
    foreign key (car_id) REFERENCES vehicle_table(vehicle_id),
    foreign key (cust_id) REFERENCES customer_table(cust_id));

INSERT INTO lease_table( lease_id, car_id, cust_id, startDate, endDate, leasetype) VALUES
	(1, 1, 1, '2023-01-01', '2023-01-05', 'Daily'),
	(2, 2, 2, '2023-02-15', '2023-02-28', 'Monthly'),
	(3, 3, 3, '2023-03-10', '2023-03-15', 'Daily'),
	(4, 4, 4, '2023-04-20', '2023-04-30', 'Monthly'),
	(5, 5, 5, '2023-05-05', '2023-05-10', 'Daily'),
	(6, 4, 3, '2023-06-15', '2023-06-30', 'Monthly'),
	(7, 7, 7, '2023-07-01', '2023-07-10', 'Daily'),
	(8, 8, 8, '2023-08-12', '2023-08-15', 'Monthly'),
	(9, 3, 3, '2023-09-07', '2023-09-10', 'Daily'),
	(10, 10, 10, '2023-10-10', '2023-10-31', 'Monthly');
    
    
CREATE TABLE payment_table(
	payment_id int primary key,
    lease_id int, 
    paymentDate date,
    amount decimal(6, 2),
    FOREIGN KEY (lease_id) REFERENCES lease_table(lease_id)
    );

INSERT INTO payment_table (payment_id, lease_id, paymentDate, amount) VALUES
	(1, 1, '2023-01-03', 200.00),
	(2, 2, '2023-02-20', 1000.00),
	(3, 3, '2023-03-12', 75.00),
	(4, 4, '2023-04-25', 900.00),
	(5, 5, '2023-05-07', 60.00),
	(6, 6, '2023-06-18', 1200.00),
	(7, 7, '2023-07-03', 40.00),
	(8, 8, '2023-08-14', 1100.00),
	(9, 9, '2023-09-09', 80.00),
	(10, 10, '2023-10-25', 1500.00);

-- 1. Update the daily rate for a Mercedes car to 68.
UPDATE vehicle_table
	SET dailyRate=68.00 
    WHERE vehicle_id=8;

-- 2. Delete a specific customer and all associated leases and payments.
SET FOREIGN_KEY_CHECKS = 0;
START TRANSACTION;
    DELETE FROM payment_table WHERE lease_id IN (SELECT lease_id FROM lease_table WHERE cust_id = 10);
    DELETE FROM lease_table WHERE cust_id = 10;
    DELETE FROM customer_table WHERE cust_id = 10;
COMMIT;
SET FOREIGN_KEY_CHECKS = 1;

-- 3. Rename the "paymentDate" column in the Payment table to "transactionDate".
ALTER TABLE payment_table
	RENAME COLUMN paymentDate TO transaction_date;

-- 4. Find a specific customer by email.
SELECT *
	FROM customer_table
		WHERE email = 'david@example.com';

-- 5. Get active leases for a specific customer.
SELECT * 
	FROM customer_table a
    JOIN lease_table l
		ON a.cust_id= l.cust_id
        WHERE endDate>= curdate();
        
-- 6. Find all payments made by a customer with a specific phone number.
SELECT p.*
	FROM payment_table p
	JOIN lease_table l ON p.lease_id = l.lease_id
	JOIN customer_table c ON l.cust_id = c.cust_id
		WHERE c.phone_no = '555-765-4321';
        
-- 7. Calculate the average daily rate of all available cars.
SELECT AVG(dailyRate) 
	FROM vehicle_table;

-- 8. Find the car with the highest daily rate.
SELECT *
	FROM vehicle_table
	ORDER BY dailyRate DESC
		LIMIT 1;

-- 9. Retrieve all cars leased by a specific customer.
SELECT v.*
	FROM lease_table l
	JOIN vehicle_table v ON l.car_id = v.vehicle_id
		WHERE l.cust_id = 1;
        
-- 10. Find the details of the most recent lease.
SELECT * 
	FROM lease_table
    ORDER BY endDate DESC
		LIMIT 1;

-- 11. List all payments made in the year 2023.
SELECT *
	FROM payment_table 
    WHERE YEAR(transaction_date) = 2023;

-- 12. Retrieve customers who have not made any payments.
SELECT c.*
	FROM customer_table c
	LEFT JOIN lease_table l ON c.cust_id = l.cust_id
	LEFT JOIN payment_table p ON l.lease_id = p.lease_id
		WHERE l.cust_id IS NULL;
        
-- 13. Retrieve Car Details and Their Total Payments.
SELECT v.*, p.transaction_date, p.amount
	FROM vehicle_table v
	JOIN lease_table l
		ON v.vehicle_id= l.car_id
	JOIN payment_table p
		ON l.lease_id= p.lease_id;

-- 14. Calculate Total Payments for Each Customer.
SELECT c.cust_id, c.first_name, c.last_name, SUM(p.amount) AS total_payments
	FROM customer_table c
	JOIN lease_table l 
		ON c.cust_id = l.cust_id
	JOIN payment_table p 
		ON l.lease_id = p.lease_id
	GROUP BY 
		c.cust_id, c.first_name, c.last_name;

-- 15. List Car Details for Each Lease.
SELECT l.lease_id, v.make, v.model, v.year, v.dailyRate, l.startDate, l.endDate
	FROM lease_table l
	JOIN vehicle_table v ON l.car_id = v.vehicle_id;

-- 16. Retrieve Details of Active Leases with Customer and Car Information.
SELECT l.lease_id, c.first_name, c.last_name, v.make, v.model, v.year, l.startDate, l.endDate
	FROM lease_table l
	JOIN customer_table c ON l.cust_id = c.cust_id
	JOIN vehicle_table v ON l.car_id = v.vehicle_id
		WHERE CURDATE() BETWEEN l.startDate AND l.endDate;

-- 17. Find the Customer Who Has Spent the Most on Leases.
SELECT c.cust_id, c.first_name, c.last_name, SUM(p.amount) AS total_spent
	FROM customer_table c
	JOIN lease_table l 
		ON c.cust_id = l.cust_id
	JOIN payment_table p 
		ON l.lease_id = p.lease_id
		GROUP BY c.cust_id, c.first_name, c.last_name
		ORDER BY total_spent DESC
		LIMIT 1;
        

-- 18. List All Cars with Their Current Lease Information.
SELECT v.vehicle_id, v.make, v.model, v.year, v.dailyRate, 
IFNULL(l.lease_id, 'Not leased') AS lease_id, 
IFNULL(l.startDate, 'Not leased') AS start_date, 
IFNULL(l.endDate, 'Not leased') AS end_date 
	FROM vehicle_table v 
	LEFT JOIN lease_table l 
		ON v.vehicle_id = l.car_id;
